<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Cocos做的微信小程序</title>
      <link href="/2020/05/23/Cocos%E5%81%9A%E7%9A%84%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
      <url>/2020/05/23/Cocos%E5%81%9A%E7%9A%84%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<h3 id="方便用于展示"><a href="#方便用于展示" class="headerlink" title="方便用于展示"></a>方便用于展示</h3><hr><p>扫我申请</p><p>  <img src="/2020/05/23/Cocos做的微信小程序/aaa.png" alt="aaa"> </p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Cocos发布微信小游戏时容量太大问题</title>
      <link href="/2020/01/07/Cocos%E5%8F%91%E5%B8%83%E5%BE%AE%E4%BF%A1%E5%B0%8F%E6%B8%B8%E6%88%8F%E6%97%B6%E5%AE%B9%E9%87%8F%E5%A4%AA%E5%A4%A7%E9%97%AE%E9%A2%98/"/>
      <url>/2020/01/07/Cocos%E5%8F%91%E5%B8%83%E5%BE%AE%E4%BF%A1%E5%B0%8F%E6%B8%B8%E6%88%8F%E6%97%B6%E5%AE%B9%E9%87%8F%E5%A4%AA%E5%A4%A7%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h3 id="清除项目用不到的模块部分"><a href="#清除项目用不到的模块部分" class="headerlink" title="清除项目用不到的模块部分"></a>清除项目用不到的模块部分</h3><p>Cocos引擎贯彻模块化,不仅代码可以模块化,引擎也可以模块化。所以我们只需要把不需要用到的模块不导出就行了。 位于<code>Project-Project Setting-Module Config</code>,把你所不需要的…什么?看不懂英文?你用的是中文版?,这波我的,我自罚一杯。把你用不到的模块反选就瘦身成功了。</p><hr><h3 id="分包"><a href="#分包" class="headerlink" title="分包"></a>分包</h3><p>我做完第一步,容量就足够我导出了。所以分包没研究过，不会做，自己百度去。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 解决小问题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>接入微信开发者平台遇到的问题</title>
      <link href="/2020/01/05/%E6%8E%A5%E5%85%A5%E5%BE%AE%E4%BF%A1%E5%BC%80%E5%8F%91%E8%80%85%E5%B7%A5%E5%85%B7%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/2020/01/05/%E6%8E%A5%E5%85%A5%E5%BE%AE%E4%BF%A1%E5%BC%80%E5%8F%91%E8%80%85%E5%B7%A5%E5%85%B7%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h2 id="这篇文章用来更新Cocos接入微信小游戏平台我所所遇的所有代码问题"><a href="#这篇文章用来更新Cocos接入微信小游戏平台我所所遇的所有代码问题" class="headerlink" title="这篇文章用来更新Cocos接入微信小游戏平台我所所遇的所有代码问题"></a>这篇文章用来更新Cocos接入微信小游戏平台我所所遇的所有<strong>代码</strong>问题</h2><p>  闲话：谁又能想到学了一两年Unity的我突然被赶鸭子上架去学Cocos和JS呢。<del>但这丝毫不影响我一个月内就学会Cocos和JS,今天DJ又无敌了吗</del><br>    咳咳,相信大家都有在Broswer或者Simulator运行时没有报错,但是一在微信开发者工具运行就报错的情况,简直跟吃了<del>欧力给</del>一样难受,下面来为大家排坑,没找到你遇到的错误的话,那可真是<code>果咩纳塞</code>了。</p><h3 id="问题1"><a href="#问题1" class="headerlink" title="问题1"></a>问题1</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> data = <span class="built_in">JSON</span>.parse(cc.sys.localStorage.getItem(<span class="string">'userData'</span>));</span><br><span class="line">  <span class="keyword">if</span>(data)&#123;</span><br><span class="line">      <span class="comment">//to do sth</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="comment">// to do sth</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>错误行数: 第1行<br>出现情况: 启动游戏时判断本地内存有没有存档,如果是第一次启动游戏就会报错。</p><p>  原因: 因为第一次启动时 <code>cc.sys.localStorage.getItem(&#39;userData&#39;)</code><br>  本来就没有东西,<code>JSON.parse()</code>一个空的东西肯定报错,所以先用变量把取出的东西存起来判空,再进行操作。PS：网上有说<code>cc.sys.localStorage.getItem(xxx)</code>没东西时在cocos是为null,在微信开发者平台为 “” 字符串。</p><pre><code>修正后：<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> data = cc.sys.localStorage.getItem(<span class="string">'userData'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (data) &#123;</span><br><span class="line">        <span class="keyword">let</span> userData = <span class="built_in">JSON</span>.parse(data);</span><br><span class="line">        to <span class="keyword">do</span> sth</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//to do sth</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 解决小问题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>今天我又变强了！</title>
      <link href="/2019/10/30/%E6%97%B6%E9%97%B4%E5%80%92%E6%95%B0%E8%AE%A1%E6%97%B6UI%E7%9A%84%E5%88%B6%E4%BD%9C/"/>
      <url>/2019/10/30/%E6%97%B6%E9%97%B4%E5%80%92%E6%95%B0%E8%AE%A1%E6%97%B6UI%E7%9A%84%E5%88%B6%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h2 id="直入主题"><a href="#直入主题" class="headerlink" title="直入主题"></a>直入主题</h2><p>首先你需要一个txt的UI,然后还有一个float类型的总时间totalTime,我这是用秒为单位的,即你想计时5分钟,代码为<code>totalTime=300;</code>.</p><p>接着定义2个int类型的min和second.</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> min;</span><br><span class="line"><span class="keyword">int</span> second;</span><br><span class="line">Text timeTxt;</span><br></pre></td></tr></table></figure><p>紧接着在Update里面 <code>totalTime-=Time.deltaTime;</code> ,这样totalTime就开始计时了.min就等于剩余的时间/60,因为是int类型,所以只保留整数.second就等于剩余时间减去60*min.</p><p>由于Text的文本属于string类型,而string类型有个重载,可以设置显示的格式,代码如下</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>   &#123;</span><br><span class="line">       totalTime -= Time.deltaTime;</span><br><span class="line"></span><br><span class="line">       minute = (<span class="keyword">int</span>)totalTime/<span class="number">60</span>;</span><br><span class="line">       second = (<span class="keyword">int</span>)totalTime - <span class="number">60</span>*minute;</span><br><span class="line"></span><br><span class="line">       time.text =<span class="keyword">string</span>.Format(<span class="string">"&#123;0&#125;:&#123;1:D2&#125;"</span>,  minute, second);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>中括号是占位符,分号后面的D是保留几位数,<code>D2</code>的意义在于当秒数为9的时候,文本会显示为<code>4:09</code>而不是<code>4:9</code>。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 小技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>制作遥感</title>
      <link href="/2019/09/24/%E9%81%A5%E6%84%9F%E7%9A%84%E5%88%B6%E4%BD%9C/"/>
      <url>/2019/09/24/%E9%81%A5%E6%84%9F%E7%9A%84%E5%88%B6%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<p><strong>要实现的功能</strong><br>    当鼠标左键时,遥感出现。拖动鼠标时，控制遥圈的跟随。松开鼠标左键时，遥感还原。</p><hr><p><strong>思路</strong><br>    遥感的位置跟鼠标位置挂钩,而鼠标坐标是屏幕坐标,UI坐标就是UI坐标,所以我们要把鼠标坐标转为UI坐标,拖拽要用到EventSystems,<br>    紧接着写代码。</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.EventSystems; <span class="comment">// 引用拖拽事件的命名空间</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Test</span> : <span class="title">MonoBehaviour</span>,<span class="title">IDragHandler</span>,<span class="title">IEndDragHandler</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> RectTransform fillTf;<span class="comment">//要移动的UI</span></span><br><span class="line">    <span class="keyword">float</span> R = <span class="number">50</span>; <span class="comment">// 半径</span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnDrag</span>(<span class="params">PointerEventData eventData</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        Vector2 pos;</span><br><span class="line">        RectTransformUtility.ScreenPointToLocalPointInRectangle((RectTransform)fillTf.parent, eventData.position, eventData.pressEventCamera, <span class="keyword">out</span> pos);</span><br><span class="line">        Vector2 dir = pos - Vector2.zero;<span class="comment">//得到有方向有大小的Vector3</span></span><br><span class="line">        <span class="keyword">if</span> (Vector2.Distance(pos, Vector2.zero) &gt;= R)<span class="comment">//当超过给定的值时 圈圈位置就等于初始位置加上单位为1的方向乘R就是小圈圈运动的范围</span></span><br><span class="line">        &#123;</span><br><span class="line">            fillTf.anchoredPosition = dir.normalized * R; <span class="comment">//dir.normalized是一个有方向,大小为1的向量,乘上一个正数时 方向不变 大小变</span></span><br><span class="line">        &#125;                                                 <span class="comment">//乘上一个负数时方向变反</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            fillTf.anchoredPosition = pos;<span class="comment">//没超过就跟着鼠标位置</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnEndDrag</span>(<span class="params">PointerEventData eventData</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        fillTf.anchoredPosition = Vector3.zero;<span class="comment">//结束拖拽 复位</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>RectTransformUtility.ScreenPointToLocalPointInRectangle()</code>这个API要传4个参数:<br>第1个是传的是要拖拽UI的父级 意义是给予拖拽UI一个参考坐标系 fillTf.parent返回值是transfrom TectTransform是transform的子类 所以可以这样转 反过来不行 涉及到了里式转换原则<br> 第2个参数传的是鼠标位置 或者说这个就是API方法名里的ScreenPoint<br>第3个是当前的渲染UI的camera<br>第4个是返回的值<br>在鼠标拖拽时,<code>Vector2 dir = pos - Vector2.zero</code> 这个方向可以传给玩家,玩家就有了移动的方向。一定要记住是玩家操纵遥感时角色移动，而不是本末倒置。</p><p>等哪天有空了把各个坐标的转换写出来</p>]]></content>
      
      
      
        <tags>
            
            <tag> 功能 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>物体移动到鼠标点击位置</title>
      <link href="/2019/09/17/%E7%89%A9%E4%BD%93%E7%A7%BB%E5%8A%A8%E5%88%B0%E9%BC%A0%E6%A0%87%E7%82%B9%E5%87%BB%E4%BD%8D%E7%BD%AE/"/>
      <url>/2019/09/17/%E7%89%A9%E4%BD%93%E7%A7%BB%E5%8A%A8%E5%88%B0%E9%BC%A0%E6%A0%87%E7%82%B9%E5%87%BB%E4%BD%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<p><strong>思路</strong><br>用射线检测实现,用协程移动,</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Move</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span> (Input.GetMouseButtonDown(<span class="number">0</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            Ray ray = Camera.main.ScreenPointToRay(Input.mousePosition);</span><br><span class="line">            RaycastHit hit;</span><br><span class="line">            <span class="keyword">if</span> (Physics.Raycast(ray, <span class="keyword">out</span> hit))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (hit.transform.tag == <span class="string">"ground"</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    Vector3 pos =hit.point;</span><br><span class="line">                    pos.y = transform.position.y;</span><br><span class="line">                    StopAllCoroutines();</span><br><span class="line">                    StartCoroutine(Imove(pos));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">IEnumerator <span class="title">Imove</span>(<span class="params">Vector3 pos</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        transform.LookAt(pos);</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">        &#123;</span><br><span class="line">           </span><br><span class="line">            transform.position = Vector3.MoveTowards(transform.position, pos, Time.fixedDeltaTime * <span class="number">30</span>);</span><br><span class="line">            <span class="keyword">if</span> (Vector3.Distance(transform.position, pos) &lt;= <span class="number">0.02f</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                transform.position = pos;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">yield</span> <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  记得把地面的标签设成<code>ground</code>,emmmm就这样吧。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 功能 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>int数组查重</title>
      <link href="/2019/08/26/%E6%9F%A5%E9%87%8D/"/>
      <url>/2019/08/26/%E6%9F%A5%E9%87%8D/</url>
      
        <content type="html"><![CDATA[<p><strong>思路</strong><br>利用Dictionary的<code>ContainValue()</code>方法和list的<code>ToArray()</code>方法返回一个新的数组。</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[] &#123; <span class="number">8</span>,<span class="number">2</span>,<span class="number">2</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">8</span>, &#125;;</span><br><span class="line">            <span class="keyword">int</span>[] newArr = Find(arr);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; newArr.Length; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(newArr[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            Console.ReadKey();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">int</span>[] <span class="title">Find</span>(<span class="params"><span class="keyword">int</span>[] str</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line">            List&lt;<span class="keyword">int</span>&gt; list = <span class="keyword">new</span> List&lt;<span class="keyword">int</span>&gt;();</span><br><span class="line">            Dictionary&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; dic = <span class="keyword">new</span> Dictionary&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt;();<span class="comment">//List和Dictionary都必须先实例化再用。</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str.Length; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (dic.ContainsValue(str[i]))</span><br><span class="line">                &#123;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span><span class="comment">//不包含才加进去</span></span><br><span class="line">                &#123;</span><br><span class="line">                    list.Add(str[i]);</span><br><span class="line">                    dic[index] = str[i];</span><br><span class="line">                    index++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//list.Sort();     如果你想打出来的数组是顺序排列的就用这个。</span></span><br><span class="line">            <span class="keyword">return</span> list.ToArray();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><hr><p>有丶简单，就不细讲了，Dictionary是查Key（即<code>Dictionary&lt;int,int&gt;</code>左边那个int）得到value(即<code>Dictionary&lt;int,int&gt;</code>右边那个int)，还有<code>Dictionary.ContainValue()</code>传入一个value类型的值返回一个bool类型，然后就没有然后了。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 面试题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Unity在3D模式下不能使用Sprite Editor</title>
      <link href="/2019/08/26/Unity%E6%96%B0%E7%89%88%E6%9C%AC%E7%9A%84%E5%B0%8F%E9%97%AE%E9%A2%98/"/>
      <url>/2019/08/26/Unity%E6%96%B0%E7%89%88%E6%9C%AC%E7%9A%84%E5%B0%8F%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h2 id="问题的出现"><a href="#问题的出现" class="headerlink" title="问题的出现"></a>问题的出现</h2><h2 id="之前没有的问题在Unity2019-2-0f1出现了，具体是在项目创建时因为选择了3D模式，进入后中途想换2D点击Sprite-Editor时提示缺少Sprite2DPackages。只需在工具栏的Window下选择Package-Manager-在左侧找到2D-Sprite或者直接搜索-2D-Sprite-然后在右下角点击Install就行了。"><a href="#之前没有的问题在Unity2019-2-0f1出现了，具体是在项目创建时因为选择了3D模式，进入后中途想换2D点击Sprite-Editor时提示缺少Sprite2DPackages。只需在工具栏的Window下选择Package-Manager-在左侧找到2D-Sprite或者直接搜索-2D-Sprite-然后在右下角点击Install就行了。" class="headerlink" title="之前没有的问题在Unity2019.2.0f1出现了，具体是在项目创建时因为选择了3D模式，进入后中途想换2D点击Sprite Editor时提示缺少Sprite2DPackages。只需在工具栏的Window下选择Package Manager,在左侧找到2D Sprite或者直接搜索 2D Sprite,然后在右下角点击Install就行了。"></a>之前没有的问题在Unity2019.2.0f1出现了，具体是在项目创建时因为选择了3D模式，进入后中途想换2D点击Sprite Editor时提示缺少Sprite2DPackages。只需在工具栏的Window下选择Package Manager,在左侧找到2D Sprite或者直接搜索 2D Sprite,然后在右下角点击Install就行了。</h2><p>  感觉3D项目下默认不安装2D Sprite是为了减少整个项目的大小，现在2D项目转3D项目一开始是少了Directional Light,加上去就行了。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 解决小问题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>查找和销毁子物体</title>
      <link href="/2019/08/14/%E6%9F%A5%E6%89%BE%E5%92%8C%E5%88%A0%E9%99%A4%E5%AD%90%E7%89%A9%E4%BD%93%E6%96%B9%E6%B3%95/"/>
      <url>/2019/08/14/%E6%9F%A5%E6%89%BE%E5%92%8C%E5%88%A0%E9%99%A4%E5%AD%90%E7%89%A9%E4%BD%93%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="查找子物体总个数（包括孙子（即子物体的子物体），曾孙（子物体的子物体的子物体"><a href="#查找子物体总个数（包括孙子（即子物体的子物体），曾孙（子物体的子物体的子物体" class="headerlink" title="查找子物体总个数（包括孙子（即子物体的子物体），曾孙（子物体的子物体的子物体))"></a>查找子物体总个数（包括孙子（即子物体的子物体），曾孙（子物体的子物体的子物体))</h2><hr><p><strong>思路：</strong><br>  <code>Transform.GetChild(index)</code>是获取当前物体下的第index个物体，返回值为Transform类型。<code>Transform.childCount</code>是获取当前物体下有多少个同级别的子物体个数（即不包括子物体的子物体）。有了这2个方法后，可以写一个方法来获取同级的个数。<br> <figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">FindChild</span>(<span class="params">Transform tf,<span class="keyword">ref</span> <span class="keyword">int</span> count</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">count=tf.childCount;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>   然后在Start()方法里调用这个方法就能获取当前同级下的子物体个数了。现在的问题在于：如何得到子物体的子物体。把FindChild方法给子物体不就能得到子物体了嘛。<br>   思路不就来了嘛，上面介绍了刚刚介绍了<code>Transform.GetChild(index)</code>方法,传入一个index得到第index个子物体，那么把第index个子物体传入<code>FindChild()</code>方法不就能找到它的子物体了嘛。有的人又问了：这只能得到第index个物体啊，我如果想全都要呢？全都要就用for循环啊，tf.childCount不就是全部子物体吗?</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">FindChild</span>(<span class="params">Transform tf.<span class="keyword">ref</span> <span class="keyword">int</span> count</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">count+=tf.childCount;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;tf.childCount;i++)</span><br><span class="line">&#123;</span><br><span class="line">FindChild(tf.GetChild(i),<span class="keyword">ref</span> count);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>  注意上面count是+=tf.childCount,因为count是累加的。</p><hr><hr><h2 id="删除子物体"><a href="#删除子物体" class="headerlink" title="删除子物体"></a>删除子物体</h2><hr><p><strong>思路:</strong><br>  当你Destroy一个物体时，它的子物体也会被顺带删除，所以Destroy当前物体的子物体就行了。<br>  <figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">DestroyChild</span>(<span class="params">transform tf</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;tf.childCount;i++)</span><br><span class="line">&#123;</span><br><span class="line">Destroy(tf.GetChild(i).gameoject);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>  如果硬是要你用<code>DestroyImmidiate（）</code>这种方法，就有点搞人了。<del>C酱就是这样搞我们的</del><code>DestroyImmidiate()</code>是立即执行的，而在Start()方法里是每帧执行，这样导致了childCount一直在变。因此有2种方法。因为childCount一直在变，所以从子物体的最后一个开始删，就算childCount一直在变，他的最后一个也不会变。</p><h2 id="第一种方法"><a href="#第一种方法" class="headerlink" title="  第一种方法"></a>  <strong>第一种方法</strong></h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">DestroyA</span>(<span class="params">Transform tf</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=tf.childCount<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">&#123;</span><br><span class="line">DestroyImmediate(tf.GetChild(i).gameObject);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="第二种方法"><a href="#第二种方法" class="headerlink" title="第二种方法"></a><strong>第二种方法</strong></h2><p>  一直删除第一个，直到他的childCount为0，就跳出.</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">DestroyB</span>(<span class="params">transform tf</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line">DestroyImmediate(tf.GetChild(<span class="number">0</span>).gameObject);</span><br><span class="line"><span class="keyword">if</span>(tf.childCount==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 面试题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>今天我又变强了！</title>
      <link href="/2019/08/11/%E4%BB%8A%E5%A4%A9%E6%88%91%E5%8F%88%E5%8F%98%E5%BC%BA%E4%BA%86/"/>
      <url>/2019/08/11/%E4%BB%8A%E5%A4%A9%E6%88%91%E5%8F%88%E5%8F%98%E5%BC%BA%E4%BA%86/</url>
      
        <content type="html"><![CDATA[<h2 id="如题所示"><a href="#如题所示" class="headerlink" title="如题所示"></a>如题所示</h2><p>今天我把二连跳弄出来了，思路很简单，想到就直接打出来了。还通宵弄了个vps，这下可以不用忍受辣鸡<del>翻墙软件</del>的龟速了。明天继续变强!</p><hr><p><strong>二连跳思路：</strong><br>  最开始的思路是在<code>Input.GetKeyDown(KeyCode.Space).</code>里用一个参数控制它只能跳两次。首先想到的是用int类型定义一个变量JumpCount,默认为0次,当按下空格键时，JumpCount自增一次。然后当<code>JumpCount==2</code>时，return这个按下空格键操作。<br>  限制跳跃次数后，紧接着要把JumpCount清0。此时你脑海里第一个想法肯定是碰到地面清0，这时肯定是在检查碰撞方法中完成。 </p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnCollisionEnter2D</span>(<span class="params">Collision2D collision</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        JumpCount = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>  但是问题又来了，当你碰到除了地面的东西，比如墙壁，比如道具盒子，比如你碰到任何除了地面的物体时，你都能二段跳，这与我们的想法差强人意（成语鬼才是我），这时，解决这种问题的方法就是，<strong>设tag</strong>。代码改成：</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnCollisionEnter2D</span>(<span class="params">Collision2D collision</span>)</span></span><br><span class="line"><span class="function"></span>   &#123;</span><br><span class="line">       <span class="keyword">if</span> (collision.gameObject.tag==<span class="string">"ground"</span>)</span><br><span class="line">       &#123;</span><br><span class="line">           JumpCount = <span class="number">0</span>;</span><br><span class="line">       &#125;     </span><br><span class="line">   ｝</span><br></pre></td></tr></table></figure><hr><p>  噔噔噔噔，一个简单的二连跳做出来了。但是问题又又又来了：比如旁边有个坑，这样我岂不是可以在坑的墙边来回二段跳爬上来？</p><h2 id="！举个栗子"><a href="#！举个栗子" class="headerlink" title="  ！举个栗子"></a>  ！<a href="images/1.png">举个栗子</a></h2><p>  (那你给坑边墙的tag改成其它不就行了嘛。你可真是个臭弟弟呢。)</p>]]></content>
      
      
      
        <tags>
            
            <tag> 小技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的第一篇博客</title>
      <link href="/2019/08/10/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
      <url>/2019/08/10/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="我成功啦！！"><a href="#我成功啦！！" class="headerlink" title="我成功啦！！"></a>我成功啦！！</h1><h2 id="我成功啦！！-1"><a href="#我成功啦！！-1" class="headerlink" title="我成功啦！！"></a>我成功啦！！</h2><hr><p><del>这是我自己弄出来的博客!</del><br>这是我在b站看<strong>codeSheep</strong>视频弄出来的博客<br>感谢codeSheep!</p><p>接下来我会在这个博客中记录我在学习或工作中遇到的难题困难和解决思路。<br>当然如果有一些小技巧我也会记录下来。</p><p>冲鸭！</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
